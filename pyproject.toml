[project]
name = "mdtbx"
version = "0.1.0"
description = "ToolBox for MD simulation"
readme = "README.md"
requires-python = "==3.10"
dependencies = []

[tool.setuptools.packages.find]
where = ["."]

[project.scripts]
mdtbx = "src.__main__:main"

[tool.pixi.project]
channels = ["conda-forge", "bioconda"]
platforms = ["linux-64", "osx-arm64", "osx-64"]

[tool.pixi.dependencies]
pymol-open-source = "==3.1.0"
mdtraj = "==1.9.9"
ambertools = "*"
gromacs = "*"
openbabel = "*"
seqkit = "*"
usalign = "*"
acpype = "*"
mafft = "*"
aliview = "*"

[tool.pixi.pypi-dependencies]
mdtbx = { path = ".", editable = true }
pymol_plugins = { path = "./pymol_plugins", editable = true }
mmterm = { git = "git+https://github.com/jgreener64/mmterm.git" }
rdkit = "*"
py3Dmol = "*"
MDAnalysis = "*"
treon = "*"
deeptime = "==0.4.4"
matplotlib = "*"
numpy = "*"
polars = { version = "*", extras = ["all"] }
pandas = "*"
jupyterlab = "*"
seaborn = "*"
scipy = "*"
optuna = "*"
scikit-learn = "*"
ruff = "*"
setuptools = "<81" # for mdtraj 1.9.9

[tool.pixi.tasks]
update = "git pull && pixi install"
docker_build = "docker build -t mdtbx ."
jupyter_remote = "jupyter lab --no-browser --port=8889" # ssh -N -L localhost:8888:localhost:8889 HOST1 && open http://localhost:8888
ruff-format = "ruff format --force-exclude"
ruff-lint = "ruff check --fix --exit-non-zero-on-fix --force-exclude"
r = { cmd = "echo OK", depends-on = ["ruff-format", "ruff-lint"] }
pymolrc = "echo \"#!/usr/bin/env python3\nimport sys; import os; sys.path.append(os.path.expanduser('\"$(pwd)/pymol_plugins/\"')); import pymol_plugins; from pymol_plugins import *;\" > $HOME/.pymolrc"
